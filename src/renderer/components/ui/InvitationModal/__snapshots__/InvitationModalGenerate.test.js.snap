// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InvitationModalGenerate renders component 1`] = `
<Memo(WithStyles(InvitationModal))
  info="Invite friends to Zbay and (optionally)
     give them some funds to get started"
  title="Invite a friend"
>
  <WithStyles(ForwardRef(Grid))
    className="warrning-mock"
    item={true}
  >
    <WithStyles(ForwardRef(Typography))
      variant="body2"
    >
      This will generate a special invite link you can share with a friend. Once your friend installs Zbay they can open it to reclaim funds. You can use it to reclaim the funds yourself too - just dont't lose the link!
    </WithStyles(ForwardRef(Typography))>
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={true}
  >
    <WithStyles(ForwardRef(Typography))
      className="fieldTitle-mock"
      variant="subtitle2"
    >
      Funds to give to friend
    </WithStyles(ForwardRef(Typography))>
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    className="divMoney-mock"
    container={true}
  >
    <WithStyles(ForwardRef(Grid))
      className="moneyDiv-mock"
      item={true}
      xs={true}
    >
      <WithStyles(ForwardRef(TextField))
        InputProps={
          Object {
            "className": "moneyInput-mock",
            "endAdornment": <ForwardRef(WithStyles)
              position="end"
            >
              <span
                className="inputMark-mock"
              >
                USD
              </span>
            </ForwardRef(WithStyles)>,
            "inputProps": Object {
              "max": 99,
              "min": 0,
            },
          }
        }
        name="usd"
        onChange={[Function]}
        placeholder="0.00"
        value="0.00"
        variant="outlined"
      />
    </WithStyles(ForwardRef(Grid))>
    <WithStyles(ForwardRef(Grid))
      alignItems="center"
      className="exchangeDiv-mock"
      container={true}
      item={true}
      justify="center"
    >
      <Memo(Icon)
        src="test-file-stub"
      />
    </WithStyles(ForwardRef(Grid))>
    <WithStyles(ForwardRef(Grid))
      className="moneyDiv-mock"
      item={true}
      xs={true}
    >
      <WithStyles(ForwardRef(TextField))
        InputProps={
          Object {
            "className": "moneyInput-mock",
            "endAdornment": <ForwardRef(WithStyles)
              position="end"
            >
              <span
                className="inputMark-mock"
              >
                ZEC
              </span>
            </ForwardRef(WithStyles)>,
          }
        }
        name="zec"
        onChange={[Function]}
        placeholder="0.00"
        value="9.0000"
        variant="outlined"
      />
    </WithStyles(ForwardRef(Grid))>
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    item={true}
  >
    <WithStyles(ForwardRef(FormControlLabel))
      className="checkboxDiv-mock"
      control={
        <ForwardRef(WithStyles)
          checked={true}
          checkedIcon={
            <Memo
              style={
                Object {
                  "fontSize": 18,
                }
              }
            />
          }
          className="checkbox-mock"
          color="primary"
          icon={
            <Memo
              style={
                Object {
                  "fontSize": 18,
                }
              }
            />
          }
          onChange={[Function]}
        />
      }
      label={
        <ForwardRef(WithStyles)
          className="checkboxLabel-mock"
          variant="body2"
        >
          Include your affiliate code, so that you'll earn 1% of their purchases. (They can disable this at any time.)
        </ForwardRef(WithStyles)>
      }
    />
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    className="buttonDiv-mock"
    item={true}
  >
    <WithStyles(LoadingButton)
      className="button-mock"
      color="primary"
      disabled={false}
      fullWidth={true}
      inProgress={[MockFunction]}
      onClick={[Function]}
      size="large"
      type="submit"
      variant="contained"
    >
      Generate invitation
    </WithStyles(LoadingButton)>
  </WithStyles(ForwardRef(Grid))>
</Memo(WithStyles(InvitationModal))>
`;
