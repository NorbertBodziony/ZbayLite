// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BasicMessage renders component 1`] = `
<WithStyles(ForwardRef(ListItem))
  className="wrapper-mock"
  onClick={[Function]}
>
  <WithStyles(ForwardRef(ListItemText))
    className="messageCard-mock"
    disableTypography={true}
    primary={
      <ForwardRef(WithStyles)
        alignItems="flex-start"
        container={true}
        direction="row"
        justify="flex-start"
        wrap="nowrap"
      >
        <withRouter(Connect(Component))
          address=""
          anchorEl={null}
          handleClose={[Function]}
          isUnregistered={false}
          username="Unnamed"
        />
        <ForwardRef(WithStyles)
          className="avatar-mock"
          item={true}
        >
          <span
            className="alignAvatar-mock"
          >
            <Jdenticon
              size="55"
              value="Unnamed"
            />
          </span>
        </ForwardRef(WithStyles)>
        <ForwardRef(WithStyles)
          alignItems="flex-start"
          className="pointer-mock"
          container={true}
          item={true}
          onClick={[Function]}
          wrap="nowrap"
          xs="auto"
        >
          <ForwardRef(WithStyles)
            item={true}
          >
            <ForwardRef(WithStyles)
              className="username-mock"
              color="textPrimary"
            >
              Unnamed
            </ForwardRef(WithStyles)>
          </ForwardRef(WithStyles)>
          <ForwardRef(WithStyles)
            item={true}
          >
            <ForwardRef(WithStyles)
              className="time-mock"
            >
              12:03
            </ForwardRef(WithStyles)>
          </ForwardRef(WithStyles)>
          <ForwardRef(WithStyles)
            className="iconBox-mock"
            item={true}
          >
            <Memo
              className="statusIcon-mock broadcasted-mock"
            />
          </ForwardRef(WithStyles)>
        </ForwardRef(WithStyles)>
      </ForwardRef(WithStyles)>
    }
  />
</WithStyles(ForwardRef(ListItem))>
`;

exports[`BasicMessage renders component when message is sent by owner 1`] = `
<WithStyles(ForwardRef(ListItem))
  className="wrapper-mock"
  onClick={[Function]}
>
  <WithStyles(ForwardRef(ListItemText))
    className="messageCard-mock"
    disableTypography={true}
    primary={
      <ForwardRef(WithStyles)
        alignItems="flex-start"
        container={true}
        direction="row"
        justify="flex-start"
        wrap="nowrap"
      >
        <withRouter(Connect(Component))
          address=""
          anchorEl={null}
          handleClose={[Function]}
          isUnregistered={false}
          username="Unnamed"
        />
        <ForwardRef(WithStyles)
          className="avatar-mock"
          item={true}
        >
          <span
            className="alignAvatar-mock"
          >
            <Jdenticon
              size="55"
              value="Unnamed"
            />
          </span>
        </ForwardRef(WithStyles)>
        <ForwardRef(WithStyles)
          alignItems="flex-start"
          className="pointer-mock"
          container={true}
          item={true}
          onClick={[Function]}
          wrap="nowrap"
          xs="auto"
        >
          <ForwardRef(WithStyles)
            item={true}
          >
            <ForwardRef(WithStyles)
              className="username-mock"
              color="textPrimary"
            >
              Unnamed
               (You)
            </ForwardRef(WithStyles)>
          </ForwardRef(WithStyles)>
          <ForwardRef(WithStyles)
            item={true}
          >
            <ForwardRef(WithStyles)
              className="time-mock"
            >
              12:03
            </ForwardRef(WithStyles)>
          </ForwardRef(WithStyles)>
          <ForwardRef(WithStyles)
            className="iconBox-mock"
            item={true}
          >
            <Memo
              className="statusIcon-mock broadcasted-mock"
            />
          </ForwardRef(WithStyles)>
        </ForwardRef(WithStyles)>
      </ForwardRef(WithStyles)>
    }
  />
</WithStyles(ForwardRef(ListItem))>
`;

exports[`BasicMessage renders component with status failed 1`] = `
<WithStyles(ForwardRef(ListItem))
  className="wrapper-mock clickable-mock wrapperPending-mock"
  onClick={[Function]}
>
  <WithStyles(ForwardRef(ListItemText))
    className="messageCard-mock"
    disableTypography={true}
    primary={
      <ForwardRef(WithStyles)
        alignItems="flex-start"
        container={true}
        direction="row"
        justify="flex-start"
        wrap="nowrap"
      >
        <withRouter(Connect(Component))
          address=""
          anchorEl={null}
          handleClose={[Function]}
          isUnregistered={false}
          username="Unnamed"
        />
        <ForwardRef(WithStyles)
          className="avatar-mock"
          item={true}
        >
          <span
            className="alignAvatar-mock"
          >
            <Jdenticon
              size="55"
              value="Unnamed"
            />
          </span>
        </ForwardRef(WithStyles)>
        <ForwardRef(WithStyles)
          alignItems="flex-start"
          className="pointer-mock"
          container={true}
          item={true}
          onClick={[Function]}
          wrap="nowrap"
          xs="auto"
        >
          <ForwardRef(WithStyles)
            item={true}
          >
            <ForwardRef(WithStyles)
              className="username-mock"
              color="textPrimary"
            >
              Unnamed
            </ForwardRef(WithStyles)>
          </ForwardRef(WithStyles)>
          <ForwardRef(WithStyles)
            item={true}
          >
            <ForwardRef(WithStyles)
              className="time-mock"
            >
              12:03
            </ForwardRef(WithStyles)>
          </ForwardRef(WithStyles)>
          <ForwardRef(WithStyles)
            className="iconBox-mock"
            item={true}
          >
            <Memo
              className="statusIcon-mock failed-mock"
            />
            <Elipsis
              classes={
                Object {
                  "content": "failed-mock",
                }
              }
              content="Error -2: This is some kind of error message"
              interactive={true}
              length={60}
              tooltipPlacement="top"
            />
          </ForwardRef(WithStyles)>
        </ForwardRef(WithStyles)>
      </ForwardRef(WithStyles)>
    }
  />
</WithStyles(ForwardRef(ListItem))>
`;

exports[`BasicMessage renders correct time for different month 1`] = `
<WithStyles(ForwardRef(ListItem))
  className="wrapper-mock"
  onClick={[Function]}
>
  <WithStyles(ForwardRef(ListItemText))
    className="messageCard-mock"
    disableTypography={true}
    primary={
      <ForwardRef(WithStyles)
        alignItems="flex-start"
        container={true}
        direction="row"
        justify="flex-start"
        wrap="nowrap"
      >
        <withRouter(Connect(Component))
          address=""
          anchorEl={null}
          handleClose={[Function]}
          isUnregistered={false}
          username="Unnamed"
        />
        <ForwardRef(WithStyles)
          className="avatar-mock"
          item={true}
        >
          <span
            className="alignAvatar-mock"
          >
            <Jdenticon
              size="55"
              value="Unnamed"
            />
          </span>
        </ForwardRef(WithStyles)>
        <ForwardRef(WithStyles)
          alignItems="flex-start"
          className="pointer-mock"
          container={true}
          item={true}
          onClick={[Function]}
          wrap="nowrap"
          xs="auto"
        >
          <ForwardRef(WithStyles)
            item={true}
          >
            <ForwardRef(WithStyles)
              className="username-mock"
              color="textPrimary"
            >
              Unnamed
            </ForwardRef(WithStyles)>
          </ForwardRef(WithStyles)>
          <ForwardRef(WithStyles)
            item={true}
          >
            <ForwardRef(WithStyles)
              className="time-mock"
            >
              Feb 07, 13:03
            </ForwardRef(WithStyles)>
          </ForwardRef(WithStyles)>
          <ForwardRef(WithStyles)
            className="iconBox-mock"
            item={true}
          >
            <Memo
              className="statusIcon-mock broadcasted-mock"
            />
          </ForwardRef(WithStyles)>
        </ForwardRef(WithStyles)>
      </ForwardRef(WithStyles)>
    }
  />
</WithStyles(ForwardRef(ListItem))>
`;

exports[`BasicMessage renders correct time for different year 1`] = `
<WithStyles(ForwardRef(ListItem))
  className="wrapper-mock"
  onClick={[Function]}
>
  <WithStyles(ForwardRef(ListItemText))
    className="messageCard-mock"
    disableTypography={true}
    primary={
      <ForwardRef(WithStyles)
        alignItems="flex-start"
        container={true}
        direction="row"
        justify="flex-start"
        wrap="nowrap"
      >
        <withRouter(Connect(Component))
          address=""
          anchorEl={null}
          handleClose={[Function]}
          isUnregistered={false}
          username="Unnamed"
        />
        <ForwardRef(WithStyles)
          className="avatar-mock"
          item={true}
        >
          <span
            className="alignAvatar-mock"
          >
            <Jdenticon
              size="55"
              value="Unnamed"
            />
          </span>
        </ForwardRef(WithStyles)>
        <ForwardRef(WithStyles)
          alignItems="flex-start"
          className="pointer-mock"
          container={true}
          item={true}
          onClick={[Function]}
          wrap="nowrap"
          xs="auto"
        >
          <ForwardRef(WithStyles)
            item={true}
          >
            <ForwardRef(WithStyles)
              className="username-mock"
              color="textPrimary"
            >
              Unnamed
            </ForwardRef(WithStyles)>
          </ForwardRef(WithStyles)>
          <ForwardRef(WithStyles)
            item={true}
          >
            <ForwardRef(WithStyles)
              className="time-mock"
            >
              Mar 07, 2018, 13:03
            </ForwardRef(WithStyles)>
          </ForwardRef(WithStyles)>
          <ForwardRef(WithStyles)
            className="iconBox-mock"
            item={true}
          >
            <Memo
              className="statusIcon-mock broadcasted-mock"
            />
          </ForwardRef(WithStyles)>
        </ForwardRef(WithStyles)>
      </ForwardRef(WithStyles)>
    }
  />
</WithStyles(ForwardRef(ListItem))>
`;

exports[`BasicMessage renders correct time for same week 1`] = `
<WithStyles(ForwardRef(ListItem))
  className="wrapper-mock"
  onClick={[Function]}
>
  <WithStyles(ForwardRef(ListItemText))
    className="messageCard-mock"
    disableTypography={true}
    primary={
      <ForwardRef(WithStyles)
        alignItems="flex-start"
        container={true}
        direction="row"
        justify="flex-start"
        wrap="nowrap"
      >
        <withRouter(Connect(Component))
          address=""
          anchorEl={null}
          handleClose={[Function]}
          isUnregistered={false}
          username="Unnamed"
        />
        <ForwardRef(WithStyles)
          className="avatar-mock"
          item={true}
        >
          <span
            className="alignAvatar-mock"
          >
            <Jdenticon
              size="55"
              value="Unnamed"
            />
          </span>
        </ForwardRef(WithStyles)>
        <ForwardRef(WithStyles)
          alignItems="flex-start"
          className="pointer-mock"
          container={true}
          item={true}
          onClick={[Function]}
          wrap="nowrap"
          xs="auto"
        >
          <ForwardRef(WithStyles)
            item={true}
          >
            <ForwardRef(WithStyles)
              className="username-mock"
              color="textPrimary"
            >
              Unnamed
            </ForwardRef(WithStyles)>
          </ForwardRef(WithStyles)>
          <ForwardRef(WithStyles)
            item={true}
          >
            <ForwardRef(WithStyles)
              className="time-mock"
            >
              Wed, 13:03
            </ForwardRef(WithStyles)>
          </ForwardRef(WithStyles)>
          <ForwardRef(WithStyles)
            className="iconBox-mock"
            item={true}
          >
            <Memo
              className="statusIcon-mock broadcasted-mock"
            />
          </ForwardRef(WithStyles)>
        </ForwardRef(WithStyles)>
      </ForwardRef(WithStyles)>
    }
  />
</WithStyles(ForwardRef(ListItem))>
`;

exports[`BasicMessage renders username 1`] = `
<WithStyles(ForwardRef(ListItem))
  className="wrapper-mock"
  onClick={[Function]}
>
  <WithStyles(ForwardRef(ListItemText))
    className="messageCard-mock"
    disableTypography={true}
    primary={
      <ForwardRef(WithStyles)
        alignItems="flex-start"
        container={true}
        direction="row"
        justify="flex-start"
        wrap="nowrap"
      >
        <withRouter(Connect(Component))
          address=""
          anchorEl={null}
          handleClose={[Function]}
          isUnregistered={false}
          username="Unnamed"
        />
        <ForwardRef(WithStyles)
          className="avatar-mock"
          item={true}
        >
          <span
            className="alignAvatar-mock"
          >
            <Jdenticon
              size="55"
              value="Unnamed"
            />
          </span>
        </ForwardRef(WithStyles)>
        <ForwardRef(WithStyles)
          alignItems="flex-start"
          className="pointer-mock"
          container={true}
          item={true}
          onClick={[Function]}
          wrap="nowrap"
          xs="auto"
        >
          <ForwardRef(WithStyles)
            item={true}
          >
            <ForwardRef(WithStyles)
              className="username-mock"
              color="textPrimary"
            >
              Unnamed
            </ForwardRef(WithStyles)>
          </ForwardRef(WithStyles)>
          <ForwardRef(WithStyles)
            item={true}
          >
            <ForwardRef(WithStyles)
              className="time-mock"
            >
              11:03
            </ForwardRef(WithStyles)>
          </ForwardRef(WithStyles)>
          <ForwardRef(WithStyles)
            className="iconBox-mock"
            item={true}
          >
            <Memo
              className="statusIcon-mock broadcasted-mock"
            />
          </ForwardRef(WithStyles)>
        </ForwardRef(WithStyles)>
      </ForwardRef(WithStyles)>
    }
  />
</WithStyles(ForwardRef(ListItem))>
`;

exports[`BasicMessage renders with status cancelled 1`] = `
<WithStyles(ForwardRef(ListItem))
  className="wrapper-mock clickable-mock wrapperPending-mock"
  onClick={[Function]}
>
  <WithStyles(ForwardRef(ListItemText))
    className="messageCard-mock"
    disableTypography={true}
    primary={
      <ForwardRef(WithStyles)
        alignItems="flex-start"
        container={true}
        direction="row"
        justify="flex-start"
        wrap="nowrap"
      >
        <withRouter(Connect(Component))
          address=""
          anchorEl={null}
          handleClose={[Function]}
          isUnregistered={false}
          username="Unnamed"
        />
        <ForwardRef(WithStyles)
          className="avatar-mock"
          item={true}
        >
          <span
            className="alignAvatar-mock"
          >
            <Jdenticon
              size="55"
              value="Unnamed"
            />
          </span>
        </ForwardRef(WithStyles)>
        <ForwardRef(WithStyles)
          alignItems="flex-start"
          className="pointer-mock"
          container={true}
          item={true}
          onClick={[Function]}
          wrap="nowrap"
          xs="auto"
        >
          <ForwardRef(WithStyles)
            item={true}
          >
            <ForwardRef(WithStyles)
              className="username-mock"
              color="textPrimary"
            >
              Unnamed
            </ForwardRef(WithStyles)>
          </ForwardRef(WithStyles)>
          <ForwardRef(WithStyles)
            item={true}
          >
            <ForwardRef(WithStyles)
              className="time-mock"
            >
              12:03
            </ForwardRef(WithStyles)>
          </ForwardRef(WithStyles)>
          <ForwardRef(WithStyles)
            className="iconBox-mock"
            item={true}
          >
            <Memo
              className="statusIcon-mock"
            />
          </ForwardRef(WithStyles)>
        </ForwardRef(WithStyles)>
      </ForwardRef(WithStyles)>
    }
  />
</WithStyles(ForwardRef(ListItem))>
`;

exports[`BasicMessage renders with status pending 1`] = `
<WithStyles(ForwardRef(ListItem))
  className="wrapper-mock wrapperPending-mock"
  onClick={[Function]}
>
  <WithStyles(ForwardRef(ListItemText))
    className="messageCard-mock"
    disableTypography={true}
    primary={
      <ForwardRef(WithStyles)
        alignItems="flex-start"
        container={true}
        direction="row"
        justify="flex-start"
        wrap="nowrap"
      >
        <withRouter(Connect(Component))
          address=""
          anchorEl={null}
          handleClose={[Function]}
          isUnregistered={false}
          username="Unnamed"
        />
        <ForwardRef(WithStyles)
          className="avatar-mock"
          item={true}
        >
          <span
            className="alignAvatar-mock"
          >
            <Jdenticon
              size="55"
              value="Unnamed"
            />
          </span>
        </ForwardRef(WithStyles)>
        <ForwardRef(WithStyles)
          alignItems="flex-start"
          className="pointer-mock"
          container={true}
          item={true}
          onClick={[Function]}
          wrap="nowrap"
          xs="auto"
        >
          <ForwardRef(WithStyles)
            item={true}
          >
            <ForwardRef(WithStyles)
              className="username-mock"
              color="textPrimary"
            >
              Unnamed
            </ForwardRef(WithStyles)>
          </ForwardRef(WithStyles)>
          <ForwardRef(WithStyles)
            item={true}
          >
            <ForwardRef(WithStyles)
              className="time-mock"
            >
              12:03
            </ForwardRef(WithStyles)>
          </ForwardRef(WithStyles)>
          <ForwardRef(WithStyles)
            className="iconBox-mock"
            item={true}
          >
            <Memo
              className="statusIcon-mock"
            />
          </ForwardRef(WithStyles)>
        </ForwardRef(WithStyles)>
      </ForwardRef(WithStyles)>
    }
  />
</WithStyles(ForwardRef(ListItem))>
`;

exports[`BasicMessage renders with status success 1`] = `
<WithStyles(ForwardRef(ListItem))
  className="wrapper-mock wrapperPending-mock"
  onClick={[Function]}
>
  <WithStyles(ForwardRef(ListItemText))
    className="messageCard-mock"
    disableTypography={true}
    primary={
      <ForwardRef(WithStyles)
        alignItems="flex-start"
        container={true}
        direction="row"
        justify="flex-start"
        wrap="nowrap"
      >
        <withRouter(Connect(Component))
          address=""
          anchorEl={null}
          handleClose={[Function]}
          isUnregistered={false}
          username="Unnamed"
        />
        <ForwardRef(WithStyles)
          className="avatar-mock"
          item={true}
        >
          <span
            className="alignAvatar-mock"
          >
            <Jdenticon
              size="55"
              value="Unnamed"
            />
          </span>
        </ForwardRef(WithStyles)>
        <ForwardRef(WithStyles)
          alignItems="flex-start"
          className="pointer-mock"
          container={true}
          item={true}
          onClick={[Function]}
          wrap="nowrap"
          xs="auto"
        >
          <ForwardRef(WithStyles)
            item={true}
          >
            <ForwardRef(WithStyles)
              className="username-mock"
              color="textPrimary"
            >
              Unnamed
            </ForwardRef(WithStyles)>
          </ForwardRef(WithStyles)>
          <ForwardRef(WithStyles)
            item={true}
          >
            <ForwardRef(WithStyles)
              className="time-mock"
            >
              12:03
            </ForwardRef(WithStyles)>
          </ForwardRef(WithStyles)>
          <ForwardRef(WithStyles)
            className="iconBox-mock"
            item={true}
          >
            <Memo
              className="statusIcon-mock"
            />
          </ForwardRef(WithStyles)>
        </ForwardRef(WithStyles)>
      </ForwardRef(WithStyles)>
    }
  />
</WithStyles(ForwardRef(ListItem))>
`;
