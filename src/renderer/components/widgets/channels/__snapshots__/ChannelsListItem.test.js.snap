// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ChannelsListItem renders component 1`] = `
<WithStyles(ForwardRef(ListItem))
  button={true}
  className="root-mock"
  disableGutters={true}
  onClick={[Function]}
>
  <WithStyles(ForwardRef(ListItemText))
    className="itemText-mock"
    classes={
      Object {
        "primary": "primary-mock",
      }
    }
    primary={
      <ForwardRef(WithStyles)
        alignItems="center"
        container={true}
      >
        <ForwardRef(WithStyles)
          item={true}
        >
          <ForwardRef(WithStyles)
            className="title-mock newMessages-mock"
            variant="body2"
          >
            <ForwardRef(WithStyles)
              container={true}
              direction="row"
            >
              <ForwardRef(WithStyles)
                item={true}
              >
                <span>
                  #
                </span>
              </ForwardRef(WithStyles)>
              <ForwardRef(WithStyles)
                className="nameSpacing-mock"
                item={true}
                xs={true}
              >
                <span>
                  Channel 1
                </span>
              </ForwardRef(WithStyles)>
            </ForwardRef(WithStyles)>
          </ForwardRef(WithStyles)>
        </ForwardRef(WithStyles)>
      </ForwardRef(WithStyles)>
    }
  />
</WithStyles(ForwardRef(ListItem))>
`;

exports[`ChannelsListItem renders component when public 1`] = `
<WithStyles(ForwardRef(ListItem))
  button={true}
  className="root-mock"
  disableGutters={true}
  onClick={[Function]}
>
  <WithStyles(ForwardRef(ListItemText))
    className="itemText-mock"
    classes={
      Object {
        "primary": "primary-mock",
      }
    }
    primary={
      <ForwardRef(WithStyles)
        alignItems="center"
        container={true}
      >
        <ForwardRef(WithStyles)
          item={true}
        >
          <ForwardRef(WithStyles)
            className="title-mock"
            variant="body2"
          >
            <ForwardRef(WithStyles)
              container={true}
              direction="row"
            >
              <ForwardRef(WithStyles)
                item={true}
              >
                <span>
                  #
                </span>
              </ForwardRef(WithStyles)>
              <ForwardRef(WithStyles)
                className="nameSpacing-mock"
                item={true}
                xs={true}
              >
                <span>
                  Channel 0
                </span>
              </ForwardRef(WithStyles)>
            </ForwardRef(WithStyles)>
          </ForwardRef(WithStyles)>
        </ForwardRef(WithStyles)>
      </ForwardRef(WithStyles)>
    }
  />
</WithStyles(ForwardRef(ListItem))>
`;

exports[`ChannelsListItem renders component with address 1`] = `
<WithStyles(ForwardRef(ListItem))
  button={true}
  className="root-mock"
  disableGutters={true}
  onClick={[Function]}
>
  <WithStyles(ForwardRef(ListItemText))
    className="itemText-mock"
    classes={
      Object {
        "primary": "primary-mock",
      }
    }
    primary={
      <ForwardRef(WithStyles)
        alignItems="center"
        container={true}
      >
        <ForwardRef(WithStyles)
          item={true}
        >
          <ForwardRef(WithStyles)
            className="title-mock newMessages-mock"
            variant="body2"
          >
            <ForwardRef(WithStyles)
              container={true}
              direction="row"
            >
              <ForwardRef(WithStyles)
                item={true}
              >
                <span>
                  #
                </span>
              </ForwardRef(WithStyles)>
              <ForwardRef(WithStyles)
                className="nameSpacing-mock"
                item={true}
                xs={true}
              >
                <span>
                  Channel 1
                </span>
              </ForwardRef(WithStyles)>
            </ForwardRef(WithStyles)>
          </ForwardRef(WithStyles)>
        </ForwardRef(WithStyles)>
      </ForwardRef(WithStyles)>
    }
  />
</WithStyles(ForwardRef(ListItem))>
`;
