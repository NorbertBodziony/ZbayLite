// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddFunds renders component 1`] = `
<Fragment>
  <WithStyles(ForwardRef(Grid))
    container={true}
    item={true}
    justify="flex-start"
  >
    <WithStyles(ForwardRef(Typography))
      className="tabTitle-mock"
      variant="h3"
    >
      Add funds to your wallet
    </WithStyles(ForwardRef(Typography))>
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    container={true}
    item={true}
    justify="flex-start"
  >
    <WithStyles(ForwardRef(Grid))
      alignContent="flex-start"
      className="root-mock"
      container={true}
      justify="center"
    >
      <WithStyles(ForwardRef(Grid))
        alignContent="center"
        className="addressSelectBox-mock"
        container={true}
        direction="column"
        item={true}
        justify="center"
        wrap="wrap"
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={true}
        >
          <WithStyles(ForwardRef(Typography))
            className="fieldTitle-mock"
            variant="subtitle2"
          >
            Address to add funds
          </WithStyles(ForwardRef(Typography))>
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={true}
        >
          <WithStyles(ForwardRef(Select))
            IconComponent={
              Object {
                "$$typeof": Symbol(react.memo),
                "compare": null,
                "displayName": "UnfoldMoreIcon",
                "muiName": "SvgIcon",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                },
              }
            }
            className="selectWrapper-mock"
            displayEmpty={true}
            input={
              <ForwardRef(WithStyles)
                className="select-mock"
                id="outlined-address"
                name="address"
              />
            }
            onChange={[MockFunction]}
            value="private"
          >
            <WithStyles(ForwardRef(MenuItem))
              value="transparent"
            >
              Transparent
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              value="private"
            >
              Private
            </WithStyles(ForwardRef(MenuItem))>
          </WithStyles(ForwardRef(Select))>
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          className="helperText-mock"
          item={true}
        >
          <WithStyles(ForwardRef(Typography))
            variant="body2"
          >
            Wallets that support Zcash shielded transactions can send you funds at this address. However, exchanges like Coinbase and Binance cannot.
          </WithStyles(ForwardRef(Typography))>
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
      <WithStyles(ForwardRef(Grid))
        alignContent="center"
        className="copyInputBox-mock"
        container={true}
        direction="column"
        item={true}
        justify="center"
        wrap="no-wrap"
      >
        <WithStyles(ForwardRef(Grid))
          className="titleBox-mock"
          item={true}
          xs={true}
        >
          <WithStyles(ForwardRef(Typography))
            className="fieldTitle-mock"
            variant="subtitle2"
          >
            Private Address
          </WithStyles(ForwardRef(Typography))>
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={true}
        >
          <WithStyles(ForwardRef(TextField))
            InputProps={
              Object {
                "classes": Object {
                  "adornedEnd": "adornedEnd-mock",
                  "input": "copyInput-mock",
                },
                "endAdornment": <ForwardRef(WithStyles)
                  alignItems="center"
                  className="iconBox-mock"
                  container={true}
                  item={true}
                  justify="center"
                >
                  <ForwardRef(WithStyles)
                    className="iconBackground-mock"
                    position="end"
                  >
                    <CopyToClipboard
                      onCopy={[MockFunction]}
                      text="test-address"
                    >
                      <ForwardRef(WithStyles)>
                        <Memo(Icon)
                          src="test-file-stub"
                        />
                      </ForwardRef(WithStyles)>
                    </CopyToClipboard>
                  </ForwardRef(WithStyles)>
                </ForwardRef(WithStyles)>,
              }
            }
            className="copyField-mock"
            disabled={true}
            id="copy-address"
            type="text"
            value="test-address"
            variant="outlined"
          />
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
      <WithStyles(ForwardRef(Grid))
        className="QRCodeBox-mock"
        container={true}
        item={true}
        justify="center"
      >
        <WithStyles(ForwardRef(Grid))
          alignItems="center"
          container={true}
          item={true}
          justify="center"
        >
          <WithStyles(ForwardRef(Grid))
            alignItems="center"
            className="whiteBox-mock"
            container={true}
            item={true}
            justify="center"
          >
            <QRCode
              bgColor="#FFFFFF"
              fgColor="#000000"
              includeMargin={false}
              level="L"
              renderAs="canvas"
              size={200}
              value="test-address"
            />
          </WithStyles(ForwardRef(Grid))>
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
      <WithStyles(ForwardRef(Grid))
        alignContent="center"
        className="addressSelectBox-mock"
        container={true}
        direction="column"
        item={true}
        justify="center"
        wrap="wrap"
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={true}
        >
          <WithStyles(ForwardRef(Typography))
            className="fieldTitle-mock"
            variant="subtitle2"
          >
            Donation recipient address or username
          </WithStyles(ForwardRef(Typography))>
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={true}
        >
          <WithStyles(ForwardRef(Autocomplete))
            filterOptions={[Function]}
            freeSolo={true}
            inputValue="test"
            name="recipient"
            onInputChange={[Function]}
            options={Array []}
            renderInput={[Function]}
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          className="titleBox-mock"
          item={true}
        >
          <WithStyles(ForwardRef(Typography))
            className="infoText-mock"
            variant="subtitle2"
          >
            When you add funds from a transparent address—an exchange, for example—Zbay will donate 1% of these funds to the address or username above. The default recipient is the Zbay team, or—if you accepted funds from an invitation—the user who invited you. You can change the recipient at any time.
          </WithStyles(ForwardRef(Typography))>
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
    </WithStyles(ForwardRef(Grid))>
  </WithStyles(ForwardRef(Grid))>
</Fragment>
`;
