// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Messages queue reducer handles actions - addMessage - removeMessage 1`] = `Immutable.Map {}`;

exports[`Messages queue reducer handles actions - addMessage when empty 1`] = `
Immutable.Map {
  "e90bec0580a0b970754e62c045dc3061c85a402bd07b4fae6c078a56cf1b7b97": Immutable.PendingDirectMessage {
    "recipientAddress": "test-recipient-address",
    "recipientUsername": "test-recipient-username",
    "offerId": "",
    "message": Immutable.Map {
      "type": 4,
      "spent": "0.32",
      "sender": Immutable.Map {
        "replyTo": "zs1z7rejlpsa98s2rrrfkwmaxu53e4ue0ulcrw0h4x5g8jl04tak0d3mm47vdtahatqrlkngh9slya",
        "username": "Wenus",
      },
      "receiver": Immutable.Map {
        "replyTo": "zs1z9rejlpsa98s2rrrfkwmaxu53e4ue0ulcrw0h4x5g8jl04tak0d3mm47vdtahatqrlkngh9slya",
        "username": "Sun",
      },
      "createdAt": 1551963828,
      "signature": Object {
        "data": Array [
          112,
          149,
          217,
          117,
          53,
          57,
          141,
          230,
          218,
          9,
          152,
          224,
          226,
          72,
          249,
          170,
          189,
          113,
          189,
          128,
          99,
          98,
          229,
          132,
          20,
          194,
          18,
          10,
          119,
          180,
          151,
          158,
          55,
          47,
          151,
          214,
          23,
          133,
          235,
          71,
          5,
          39,
          168,
          62,
          27,
          223,
          218,
          102,
          36,
          149,
          196,
          0,
          85,
          68,
          53,
          164,
          116,
          51,
          158,
          48,
          150,
          150,
          242,
          127,
        ],
        "type": "Buffer",
      },
      "message": "test-message-id",
    },
  },
}
`;

exports[`Messages queue reducer handles actions - addMessage when has matching message 1`] = `
Immutable.Map {
  "e90bec0580a0b970754e62c045dc3061c85a402bd07b4fae6c078a56cf1b7b97": Immutable.PendingDirectMessage {
    "recipientAddress": "test-recipient-address",
    "recipientUsername": "test-recipient-username",
    "offerId": "",
    "message": Immutable.Map {
      "type": 4,
      "spent": "0.32",
      "sender": Immutable.Map {
        "replyTo": "zs1z7rejlpsa98s2rrrfkwmaxu53e4ue0ulcrw0h4x5g8jl04tak0d3mm47vdtahatqrlkngh9slya",
        "username": "Wenus",
      },
      "receiver": Immutable.Map {
        "replyTo": "zs1z9rejlpsa98s2rrrfkwmaxu53e4ue0ulcrw0h4x5g8jl04tak0d3mm47vdtahatqrlkngh9slya",
        "username": "Sun",
      },
      "createdAt": 1551963828,
      "signature": Object {
        "data": Array [
          112,
          149,
          217,
          117,
          53,
          57,
          141,
          230,
          218,
          9,
          152,
          224,
          226,
          72,
          249,
          170,
          189,
          113,
          189,
          128,
          99,
          98,
          229,
          132,
          20,
          194,
          18,
          10,
          119,
          180,
          151,
          158,
          55,
          47,
          151,
          214,
          23,
          133,
          235,
          71,
          5,
          39,
          168,
          62,
          27,
          223,
          218,
          102,
          36,
          149,
          196,
          0,
          85,
          68,
          53,
          164,
          116,
          51,
          158,
          48,
          150,
          150,
          242,
          127,
        ],
        "type": "Buffer",
      },
      "message": "test-message-id",
    },
  },
  "2871d65bf4356895a35255adcc9728ebc1248f36e98dc72241e7a2c7e6daf994": Immutable.PendingDirectMessage {
    "recipientAddress": "test-recipient-address",
    "recipientUsername": "test-recipient-username",
    "offerId": "",
    "message": Immutable.Map {
      "type": 4,
      "spent": "0.32",
      "sender": Immutable.Map {
        "replyTo": "zs1z7rejlpsa98s2rrrfkwmaxu53e4ue0ulcrw0h4x5g8jl04tak0d3mm47vdtahatqrlkngh9slya",
        "username": "Wenus",
      },
      "receiver": Immutable.Map {
        "replyTo": "zs1z9rejlpsa98s2rrrfkwmaxu53e4ue0ulcrw0h4x5g8jl04tak0d3mm47vdtahatqrlkngh9slya",
        "username": "Sun",
      },
      "createdAt": 1551963829,
      "signature": Object {
        "data": Array [
          207,
          8,
          31,
          126,
          26,
          81,
          86,
          165,
          151,
          54,
          139,
          180,
          213,
          218,
          97,
          66,
          38,
          148,
          176,
          161,
          245,
          191,
          37,
          158,
          253,
          152,
          151,
          193,
          81,
          46,
          149,
          91,
          103,
          26,
          187,
          72,
          148,
          6,
          106,
          154,
          2,
          201,
          225,
          42,
          221,
          131,
          221,
          26,
          41,
          54,
          221,
          102,
          255,
          222,
          44,
          200,
          118,
          87,
          45,
          87,
          231,
          136,
          112,
          74,
        ],
        "type": "Buffer",
      },
      "message": "test-message-id-2",
    },
  },
}
`;

exports[`Messages queue reducer handles epics - checkConfirmationStatus change confirmation status of messages in vault, store should not have any pending direct messages 1`] = `Object {}`;

exports[`Messages queue reducer handles epics - checkConfirmationStatus change confirmation status of messages in vault, store should not have any pending direct messages 2`] = `
Object {
  "address": "test-recipient-address",
  "messages": Array [
    Object {
      "createdAt": 1551963828,
      "id": "test-tx-id",
      "message": "test-message-id",
      "sender": Object {
        "replyTo": "test-address",
        "username": "Saturn",
      },
      "spent": "0.32",
      "status": "success",
      "type": 4,
    },
    Object {
      "createdAt": 1551963828,
      "id": "test-tx-id",
      "message": "test-message-id",
      "sender": Object {
        "replyTo": "test-address",
        "username": "Saturn",
      },
      "spent": "0.32",
      "status": "broadcasted",
      "type": 4,
    },
  ],
  "username": "test-recipient-username",
}
`;

exports[`Messages queue reducer handles epics - checkConfirmationStatus polls when no finished, vault should have stored message with status success 1`] = `
Array [
  Array [
    [Function],
    60000,
  ],
  Array [
    [Function],
    60000,
  ],
]
`;

exports[`Messages queue reducer handles epics - checkConfirmationStatus polls when no finished, vault should have stored message with status success 2`] = `
Object {
  "address": "test-recipient-address",
  "messages": Array [
    Object {
      "createdAt": 1551963828,
      "id": "test-tx-id",
      "message": "test-message-id",
      "sender": Object {
        "replyTo": "test-address",
        "username": "Saturn",
      },
      "spent": "0.32",
      "status": "success",
      "type": 4,
    },
  ],
  "username": "test-recipient-username",
}
`;
