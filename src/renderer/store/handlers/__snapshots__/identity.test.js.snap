// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Identity reducer handles actions - setLoading 1`] = `
Immutable.IdentityState {
  "data": Immutable.Identity {
    "id": null,
    "address": "",
    "transparentAddress": "",
    "name": "",
    "balance": null,
    "lockedBalance": null,
  },
  "fetchingBalance": false,
  "loader": Immutable.Record {
    "loading": true,
    "message": "",
  },
  "errors": "",
}
`;

exports[`Identity reducer handles actions - setLoadingMessage 1`] = `Object {}`;

exports[`Identity reducer handles actions handles setBalance 1`] = `
Immutable.IdentityState {
  "data": Immutable.Identity {
    "id": null,
    "address": "",
    "transparentAddress": "",
    "name": "",
    "balance": "2.34",
    "lockedBalance": null,
  },
  "fetchingBalance": false,
  "loader": Immutable.Record {
    "loading": true,
    "message": "",
  },
  "errors": "",
}
`;

exports[`Identity reducer handles actions handles setErrors 1`] = `
Immutable.IdentityState {
  "data": Immutable.Identity {
    "id": null,
    "address": "",
    "transparentAddress": "",
    "name": "",
    "balance": null,
    "lockedBalance": null,
  },
  "fetchingBalance": false,
  "loader": Immutable.Record {
    "loading": true,
    "message": "",
  },
  "errors": [Error: this is some error],
}
`;

exports[`Identity reducer handles actions handles setFetchingBalance to false 1`] = `
Immutable.IdentityState {
  "data": Immutable.Identity {
    "id": null,
    "address": "",
    "transparentAddress": "",
    "name": "",
    "balance": null,
    "lockedBalance": null,
  },
  "fetchingBalance": false,
  "loader": Immutable.Record {
    "loading": true,
    "message": "",
  },
  "errors": "",
}
`;

exports[`Identity reducer handles actions handles setFetchingBalance to true 1`] = `
Immutable.IdentityState {
  "data": Immutable.Identity {
    "id": null,
    "address": "",
    "transparentAddress": "",
    "name": "",
    "balance": null,
    "lockedBalance": null,
  },
  "fetchingBalance": true,
  "loader": Immutable.Record {
    "loading": true,
    "message": "",
  },
  "errors": "",
}
`;

exports[`Identity reducer handles actions handles setIdentity 1`] = `
Immutable.IdentityState {
  "data": Immutable.Identity {
    "id": "test-id",
    "address": "testaddress",
    "transparentAddress": "transparent-test-address",
    "name": "Saturn",
    "balance": null,
    "lockedBalance": null,
  },
  "fetchingBalance": false,
  "loader": Immutable.Record {
    "loading": true,
    "message": "",
  },
  "errors": "",
}
`;

exports[`Identity reducer handles actions handles setLockedBalance 1`] = `
Immutable.IdentityState {
  "data": Immutable.Identity {
    "id": null,
    "address": "",
    "transparentAddress": "",
    "name": "",
    "balance": null,
    "lockedBalance": "2.34",
  },
  "fetchingBalance": false,
  "loader": Immutable.Record {
    "loading": true,
    "message": "",
  },
  "errors": "",
}
`;

exports[`Identity reducer handles epics - fetchBalance creates shield balance operation 1`] = `
Immutable.Map {
  "test-op-id": Immutable.Operation {
    "opId": "test-op-id",
    "type": "shieldBalance",
    "meta": Immutable.Record {
      "amount": "0.00224",
      "from": "transparent-test-address",
      "to": "testaddress",
    },
    "txId": null,
    "error": null,
    "status": "pending",
  },
}
`;

exports[`Identity reducer handles epics - fetchBalance fetches transparent and private balances 1`] = `
Immutable.IdentityState {
  "data": Immutable.Identity {
    "id": "test-id",
    "address": "testaddress",
    "transparentAddress": "transparent-test-address",
    "name": "Saturn",
    "balance": "2.2352",
    "lockedBalance": "0",
  },
  "fetchingBalance": false,
  "loader": Immutable.Record {
    "loading": true,
    "message": "",
  },
  "errors": "",
}
`;

exports[`Identity reducer handles epics - fetchBalance handles errors 1`] = `
Immutable.IdentityState {
  "data": Immutable.Identity {
    "id": "test-id",
    "address": "testaddress",
    "transparentAddress": "transparent-test-address",
    "name": "Saturn",
    "balance": null,
    "lockedBalance": null,
  },
  "fetchingBalance": false,
  "loader": Immutable.Record {
    "loading": true,
    "message": "",
  },
  "errors": "node error",
}
`;

exports[`Identity reducer handles epics handles createIdentity bootstraps general for mainnet 1`] = `
Array [
  Object {
    "address": "zs1dhqp9dtr4pksnmaynp2k22qduvywejg3neqq4swd4a6gnz6w0m208kefcdm9n2067yn5clcvgsq",
    "description": "This is a general channel available to all users of Zbay by default.",
    "keys": Object {
      "ivk": "zivks1g0pxacm9ptufsnnp2g23rhcuelpt90ftvamgrvy6hlqeg3n00qrqer5uxf",
    },
    "lastSeen": "2019-03-07T13:03:48.000Z",
    "name": "General",
    "private": true,
    "unread": 0,
  },
]
`;

exports[`Identity reducer handles epics handles createIdentity bootstraps general for testnet 1`] = `
Array [
  Object {
    "address": "ztestsapling16e4wekqjyx80yjjzf24ztyflt2c5tt6avt4nftgnj694n8e5x8fz5pr9ejsd3l9lmymf29khjnk",
    "description": "This is a general channel available to all users of Zbay by default.",
    "keys": Object {
      "ivk": "zivktestsapling1p5rp2czztl8amalqm5ghzvhr35n08h26vhphnw2x6k83trft7sqsn9qkd6",
    },
    "lastSeen": "2019-03-07T13:03:48.000Z",
    "name": "General",
    "private": true,
    "unread": 0,
  },
]
`;

exports[`Identity reducer handles epics handles createIdentity creates identity in vault 1`] = `
Array [
  Array [
    Object {
      "address": "sapling-private-address",
      "keys": Object {
        "sk": "sapling-private-address-spending-key",
        "tpk": "transparent-address-private-key",
      },
      "name": "Mercury",
      "transparentAddress": "transparent-address",
    },
  ],
]
`;

exports[`Identity reducer handles epics handles createIdentity returns created identity 1`] = `
Object {
  "address": "sapling-private-address",
  "id": "thisisatestid",
  "keys": Object {
    "sk": "sapling-private-address-spending-key",
    "tpk": "transparent-address-private-key",
  },
  "name": "Mercury",
  "transparentAddress": "transparent-address",
}
`;

exports[`Identity reducer handles epics handles set identity - loads channels 1`] = `
Immutable.List [
  Immutable.Map {
    "lastSeen": "2019-03-07T13:03:48.000Z",
    "name": "Channel 2",
    "private": true,
    "address": "zs1testaddress2",
    "unread": 2,
    "description": "",
    "keys": Immutable.Map {
      "ivk": "incoming-viewing-key-2",
    },
  },
  Immutable.Map {
    "lastSeen": "2019-03-07T13:03:48.000Z",
    "name": "Channel 1",
    "private": true,
    "address": "zs1testaddress1",
    "unread": 1,
    "description": "Channel about 1",
    "keys": Immutable.Map {
      "ivk": "incoming-viewing-key-1",
    },
  },
  Immutable.Map {
    "lastSeen": "2019-03-07T13:03:48.000Z",
    "name": "Channel 0",
    "private": true,
    "address": "zs1testaddress0",
    "unread": 0,
    "description": "",
    "keys": Immutable.Map {
      "ivk": "incoming-viewing-key-0",
    },
  },
]
`;

exports[`Identity reducer handles epics handles set identity - sets identity 1`] = `
Immutable.IdentityState {
  "data": Immutable.Identity {
    "id": "test-id",
    "address": "testaddress",
    "transparentAddress": "transparent-test-address",
    "name": "Saturn",
    "balance": "2.2352",
    "lockedBalance": "0",
  },
  "fetchingBalance": false,
  "loader": Immutable.Record {
    "loading": false,
    "message": "Fetching balance and loading channels",
  },
  "errors": "",
}
`;
